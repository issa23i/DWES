- Modifica la aplicación de la tienda web desarrollada en unidades
anteriores para evitar que la página listado_productos.php se recargue
completamente cada vez que se añade un nuevo producto a la cesta o ésta
se vacía. El resto de funcionalidades y apariencia de la aplicación se
mantienen como en la aplicación original.

- Se deben crear los siguientes ficheros PHP para devolver los datos
solicitados mediante AJAX:

    - productos_json.php: Devuelve los datos de los productos de una
    familia en formato JSON. El código de la familia se le pasa en la URL
    de la petición.

    - cesta_json.php: Devuelve un array JSON con los datos de los productos
    presentes en la cesta y las unidades pedidas.

- Por otro lado, se debe crear un nuevo fichero con código JS,
cargarDatos.js, que contiene las funciones necesarias para pedir los
datos al servidor y modificar la estructura de la página.

- La función cargarProductos() en JS pide los datos al servidor
(productos_json.php), elimina el contenido de la sección e introduce una tabla
con los productos obtenidos.

- Para crear la tabla de productos utiliza la función auxiliar
crearTablaProcutos(productos), que recibe el array de productos y devuelve un
elemento <table> con una fila por producto. Esta función llama a su vez a las
funciones crear_fila() y crear_Formulario ().

- Para crear el formulario de cada fila se usa la función crearFormulario(texto,
cod, function), que recibe el texto del botón, el código del producto y el
nombre de la función que se encarga de enviar el formulario, anadirProductos.
El formulario queda asociado con la función a través del atributo onsubmit, de
modo que cuando se pulse el botón de envío del formulario, se llamará a la
función.

- La función anadirProductos() se encarga de coger los datos del formulario y
enviarlos a anadir_json.php. Como es un envío POST, hay que crear una cabecera
y una cadena con los parámetros. Al recibir la respuesta, llama a
cargarCesta(). A su vez, cargarCesta() solicita al servidor los datos de los
productos de la cesta (cesta_json.php) y muestra los productos en la sección
de la cesta. También muestra el botón para realizar la compra.

- Por último, vaciarCesta() llama a vaciar_cesta.php para eliminar la variable
de sesión, muestra la cesta vacía y deshabilita los botones.

- El tipo de dato que hemos definido para guardar los productos y sus
unidades en la cesta es un array asociativo cuyas claves son los códigos
de productos y sus elementos son a su vez arrays de dos elementos:

    - 'producto' => objeto Producto cuyos atributos guardan los datos del producto.
    - 'unidades' => número entero con las unidades del producto en la cesta.

- Para codificar con la función json_encode() este tipo de dato que mezcla
arrays y objetos, convertiremos previamente los objetos Producto a
arrays.